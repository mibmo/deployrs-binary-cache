name: "Populate binary cache"

on:
  schedule:
    - cron: '00 00 * * *'
  push:
    branches:
      - main

jobs:
  build:
    strategy:
      # dont fail just because one system doesn't build
      fail-fast: false
      matrix:
        branch: [ master ]
        config:
          - { os: ubuntu-latest, system: x86_64-linux }
          - { os: ubuntu-latest, system: aarch64-linux }
          - { os: macos-latest,  system: x86_64-darwin }
           # would use macos-latest-xlarge, but it's expensive
          - { os: flyci-macos-large-latest-m1, system: aarch64-darwin }
    name: ${{ matrix.branch }} for ${{ matrix.config.system }}
    runs-on: ${{ matrix.config.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          repository: serokell/deploy-rs
          ref: ${{ matrix.branch }}
      - uses: docker/setup-qemu-action@v3
        if: matrix.config.os == 'ubuntu-latest'
      - uses: cachix/install-nix-action@v25
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: extra-platforms = ${{ matrix.config.system }}
      - uses: cachix/cachix-action@v14
        with:
          name: deploy-rs
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
      - name: Build deploy-rs
        run: nix build .#packages.${{ matrix.config.system }}.default
      # pushing is automatically done by cachix-action's post-run, but to pin a path it needs to
      # exist first the post-run push will report "path already exists" and can be safely ignored
      - name: Push store path to cachix
        run: cachix push deploy-rs $(readlink -f ./result)
      - name: Pin store path on cachix
        run: cachix pin deploy-rs ${{ matrix.config.system }}-$(git rev-parse --short HEAD) $(readlink -f ./result) --keep-days 1
